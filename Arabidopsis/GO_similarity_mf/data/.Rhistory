mimodificada=function(X,Y,ensy){
U <- cbind(Y, X)
Hx <- .Call("entropyR",X, ensy, 1, 2, DUP = FALSE, PACKAGE = "infotheo")
Hy <- .Call("entropyR",Y, ensy, 1, 2, DUP = FALSE, PACKAGE = "infotheo")
Hyx <- .Call("entropyR",U, ensy, 2, 2, DUP = FALSE, PACKAGE = "infotheo")
res <- Hx + Hy - Hyx
res
}
w<-1:25
w
z <- scan()
x <- c(3,8,9,6,4,5)
y <- seq(1, 20, 2)
library("genefilter")
tab  <- read.table("Desktop/Blast_Gold_standard/Results/Gen-Gen_similarity.matrix")
tab[c(8200:8212),c(8200:8212)]
mini <- tab[c(8200:8212),c(8200:8212)]
View(mini)
tab  <- read.table("Desktop/Blast_Gold_standard/Results/Gen-Gen_adjacency.matrix")
View(tab)
mini <- tab[c(9800:9829),c(1:12)]
View(mini)
View(tab)
tab  <- read.table("Desktop/Blast_Gold_standard/Results/Gen-Gen_similarity.matrix")
View(tab)
mini <- tab[c(8200:8212),c(8200:8212)]
View(mini)
tab  <- read.table("Desktop/Blast_Gold_standard/Results/Gen-Gen_similarity.matrix")
View(tab)
tab  <- read.table("Desktop/Blast_Gold_standard/Results/Gen-Gen_similarity.matrix", header=TRUE)
View(tab)
citation("Agi4x44PreProcess")
source("http://bioconductor.org/biocLite.R")
citation("Agi4x44PreProcess")
biocLite("Agi4x44PreProcess")
citation("Agi4x44PreProcess")
source("http://bioconductor.org/biocLite.R")
biocLite("marray")
citation("marray")
x  <- c(3.9        3.5        1.2        0.0        2.4        3.4        3.4        2.9        1.2        3.4        2.2        2.5        0.0        4.5        3.9        2.7        1.4        3.5        2.0        2.7        2.9        2.2        3.5        4.7        3.2        2.4        3.7        0.0        1.2        0.0        2.4        1.2        1.7        3.0        0.0        0.0        2.9        2.4        2.4        0.0        4.2        3.9        2.4        4.5        4.2        1.9        0.0        4.4        0.0        3.5        5.0        3.9        1.2        1.4        1.2        1.2        4.2        3.4        3.5        1.7        5.0        3.5        2.4        4.4        3.7        0.0        1.9        1.2        3.5        1.2        0.0        0.0        2.4        0.0        4.2        2.0        0.0        5.0        2.4        2.7        1.2        5.0        4.9        0.0        2.7        1.2        3.5)
x <- c(3.9,3.5,1.2,0.0,2.4,3.4,3.4,2.9,1.2,3.4,2.2,2.5,0.0,4.5,3.9,2.7,1.4,3.5,2.0,2.7,2.9,2.2,3.5,4.7,3.2,2.4,3.7,0.0,1.2,0.0,2.4,1.2,1.7,3.0,0.0,0.0,2.9,2.4,2.4,0.0,4.2,3.9,2.4,4.5,4.2,1.9,0.0,4.4,0.0,3.5,5.0,3.9,1.2,1.4,1.2,1.2,4.2,3.4,3.5,1.7,5.0,3.5,2.4,4.4,3.7,0.0,1.9,1.2,3.5,1.2,0.0,0.0,2.4,0.0,4.2,2.0,0.0,5.0,2.4,2.7,1.2,5.0,4.9,0.0,2.7,1.2,3.5)
barplot(x)
boxplot(x)
barplot(summary(x))
barplot(summary(as.factor(x))
)
barplot(summary(as.factor(x)))
rank (x)
hist(x)
hist(x, breaks=4)
hist(x, breaks=9)
nzmean <- function(x) {
if (all(x==0)) 0 else mean(x[x!=0])
}
apply(x,1,nzmean)
x[x == 0] <- NA
x
hist(x, breaks=9)
mean(x=x,na.rm=T)
mean(x=x,na.rm=F)
x <- c(3.9,3.5,1.2,0.0,2.4,3.4,3.4,2.9,1.2,3.4,2.2,2.5,0.0,4.5,3.9,2.7,1.4,3.5,2.0,2.7,2.9,2.2,3.5,4.7,3.2,2.4,3.7,0.0,1.2,0.0,2.4,1.2,1.7,3.0,0.0,0.0,2.9,2.4,2.4,0.0,4.2,3.9,2.4,4.5,4.2,1.9,0.0,4.4,0.0,3.5,5.0,3.9,1.2,1.4,1.2,1.2,4.2,3.4,3.5,1.7,5.0,3.5,2.4,4.4,3.7,0.0,1.9,1.2,3.5,1.2,0.0,0.0,2.4,0.0,4.2,2.0,0.0,5.0,2.4,2.7,1.2,5.0,4.9,0.0,2.7,1.2,3.5)
mean(x)
y[x == ]  <- NA
y[x == 0]  <- NA
library("ade4", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
data(jv73)
Sys.setenv(http_proxy="http://afquinteromo:2012Drauglyafqm@168.176.55.63:8080")
data(jv73)
kta1 <- ktab.within(withinpca(jv73$morpho, jv73$fac.riv, scann = FALSE))
library(ad4)
library(ade4)
library(sp)
rm (jv73,kta1)
data(jv73)
install.packages("sp")
rm (jv73,kta1)
install.packages("sp")
library(sp)
data(jv73)
kta1 <- ktab.within(withinpca(jv73$morpho, jv73$fac.riv, scann = FALSE))
statis1 <- statis(kta1, scann = FALSE)
plot(statis1)
class(jv73$morpho)
jv73$morpho
dudi1 <- dudi.pca(jv73$poi, scann = FALSE, scal = FALSE)
wit1 <- wca(dudi1, jv73$fac.riv, scann = FALSE)
kta3 <- ktab.within(wit1)
data(jv73)
statis3 <- statis(kta3, scann = FALSE)
plot(statis3)
s.arrow(statis3$C.li, cgrid = 0)
kplot(statis3, traj = TRUE, arrow = FALSE, unique = TRUE,
clab = 0, csub = 3, cpoi = 3)
statis3
jv73
jv73$morpho
jv73$phychi
statis3
jv73$morpho
jv73$phychi
jv73$fac.riv
Sys.setenv(http_proxy="http://afquinteromo:2012Drauglyafqm@168.176.55.63:8080")
source("http://bioconductor.org/biocLite.R")
biocLite("affy")
Sys.getenv("http_proxy")
library(CLL)
biocLite("CLL")
biocLite("affydata")
source("http://bioconductor.org/biocLite.R")
biocLite("multtest")
source("http://bioconductor.org/biocLite.R")
library(multtest)
biocLite("multtest")
source("http://bioconductor.org/biocLite.R")
library(ade4)
library(sp)
data(jv73)
class(jv73)
ls(jv73)
kta1 <- ktab.within(withinpca(jv73$morpho, jv73$fac.riv, scann = FALSE))
statis1 <- statis(kta1, scann = FALSE)
plot(statis1)
dudi1 <- dudi.pca(jv73$poi, scann = FALSE, scal = FALSE)
wit1 <- wca(dudi1, jv73$fac.riv, scann = FALSE)
kta3 <- ktab.within(wit1)
data(jv73)
statis3 <- statis(kta3, scann = FALSE)
plot(statis3)
s.arrow(statis3$C.li, cgrid = 0)
kplot(statis3, traj = TRUE, arrow = FALSE, unique = TRUE,
clab = 0, csub = 3, cpoi = 3)
statis3
ls(jv73)
jv73$morpho
jv73$contour
jv73$fac.riv
jv73$morpho
jv73$phychi
jv73$poi
jv73$Spatial
jv73$xy
class(kta1)
kta1
ls(kta1)
class(statis1)
statis1
source("http://bioconductor.org/biocLite.R")
library("GWASTools")
data(affyScanADF)
samp.chr.matrix <- matrix(TRUE,nrow(affyScanADF),26)
dup <- duplicated(affyScanADF$subjectID)
ibrary(GWASdata)
library(GWASdata)
data(affyScanADF)
samp.chr.matrix <- matrix(TRUE,nrow(affyScanADF),26)
dup <- duplicated(affyScanADF$subjectID)
samp.chr.matrix[dup | is.na(affyScanADF$sex),] <- FALSE #identified duplicated data and missing
samp.chr.matrix[affyScanADF$sex=="F", 25] <- FALSE
# additionally, exclude YRI subjects
scan.exclude <- affyScanADF$scanID[affyScanADF$race == "YRI"]
affyScanADF$age <- rnorm(nrow(affyScanADF),mean=40, sd=10)
affyScanADF$event <- rbinom(nrow(affyScanADF),1,0.4)
affyScanADF$ttoe <- rnorm(nrow(affyScanADF),mean=100,sd=10)
# create data object
ncfile <- system.file("extdata", "affy_geno.nc", package="GWASdata")
nc <- NcdfGenotypeReader(ncfile)
genoData <-  GenotypeData(nc, scanAnnot=affyScanADF)
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
biocLite("BiocUpgrade")
library("ade4", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:ade4", unload=TRUE)
ibrary("GWASTools")
?assocTestCPH
# an example of a scan chromosome matrix
# desiged to eliminate duplicated individuals
# and scans with missing values of sex
#biocLite("GWASdata")
library(GWASdata)
data()
data(affyScanADF)
samp.chr.matrix <- matrix(TRUE,nrow(affyScanADF),26)
dup <- duplicated(affyScanADF$subjectID)
samp.chr.matrix[dup | is.na(affyScanADF$sex),] <- FALSE #identified duplicated data and missing
samp.chr.matrix[affyScanADF$sex=="F", 25] <- FALSE
# additionally, exclude YRI subjects
scan.exclude <- affyScanADF$scanID[affyScanADF$race == "YRI"]
# create some variables for the scans
affyScanADF$age <- rnorm(nrow(affyScanADF),mean=40, sd=10)
affyScanADF$event <- rbinom(nrow(affyScanADF),1,0.4)
affyScanADF$ttoe <- rnorm(nrow(affyScanADF),mean=100,sd=10)
# create data object
ncfile <- system.file("extdata", "affy_geno.nc", package="GWASdata")
nc <- NcdfGenotypeReader(ncfile)
genoData <-  GenotypeData(nc, scanAnnot=affyScanADF)
ncfile <- tempfile()simulateGenotypeMatrix(n.snps=10, n.chromosomes=40, n.samples=5,                       ncdf.filename=ncfile)nc <- NcdfGenotypeReader(ncfile, autosomeCode=1:38L,                         XchromCode=39L, YchromCode=40L,                         XYchromCode=41L, MchromCode=42L)table(getChromosome(nc))table(getChromosome(nc, char=TRUE))# SNP annotationsnpdf <- data.frame(snpID=getSnpID(nc),                    chromosome=getChromosome(nc),                    position=getPosition(nc))snpAnnot <- SnpAnnotationDataFrame(snpdf, autosomeCode=1:38L,                                   XchromCode=39L, YchromCode=40L,                                   XYchromCode=41L, MchromCode=42L)varMetadata(snpAnnot)[,"labelDescription"] <-  c("unique integer ID",    "chromosome coded as 1:38=autosomes, 39=Z, 40=W",    "base position")# reverse sex coding to get proper counting of sex chromosome SNPsscandf <- data.frame(scanID=1:5, sex=c("M","M","F","F","F"),                     stringsAsFactors=FALSE)scanAnnot <- ScanAnnotationDataFrame(scandf)varMetadata(scanAnnot)[,"labelDescription"] <-  86genotypeToCharacterc("unique integer ID",  "sex coded as M=female and F=male")genoData2 <- GenotypeData(nc, snpAnnot=snpAnnot, scanAnnot=scanAnnot)
ncfile <- tempfile()
simulateGenotypeMatrix(n.snps=10, n.chromosomes=40, n.samples=5,
ncdf.filename=ncfile)
nc <- NcdfGenotypeReader(ncfile, autosomeCode=1:38L,
XchromCode=39L, YchromCode=40L,
XYchromCode=41L, MchromCode=42L)
table(getChromosome(nc))
table(getChromosome(nc, char=TRUE))
# SNP annotation
snpdf <- data.frame(snpID=getSnpID(nc),
chromosome=getChromosome(nc),
position=getPosition(nc))
snpAnnot <- SnpAnnotationDataFrame(snpdf, autosomeCode=1:38L,
XchromCode=39L, YchromCode=40L,
XYchromCode=41L, MchromCode=42L)
varMetadata(snpAnnot)[,"labelDescription"] <-
c("unique integer ID",
"chromosome coded as 1:38=autosomes, 39=Z, 40=W",
"base position")
# reverse sex coding to get proper counting of sex chromosome SNPs
scandf <- data.frame(scanID=1:5, sex=c("M","M","F","F","F"),
stringsAsFactors=FALSE)
scanAnnot <- ScanAnnotationDataFrame(scandf)
varMetadata(scanAnnot)[,"labelDescription"] <-
86
genotypeToCharacter
c("unique integer ID",
"sex coded as M=female and F=male")
genoData2 <- GenotypeData(nc, snpAnnot=snpAnnot, scanAnnot=scanAnnot)
genoData
genoData2
genoData$event
affyScanADF$event
nc$event
View(scandf)
genotypeToCharacter
ScanAnnotationDataFrame(scandf)
scanAnnot
affyScanADF$ttoe
affyScanADF$age
?assocTestCPH
warning()
warnings()
setwd("Dropbox/Masters_networks_project/GO_similarity_matrix/Data/")
library(GOSemSim)
gen_names <- read.table("arabidopsis_gene_list.txt", header=F)
gen_names <- gen_names$V1
gen_names <- head(gen_names,n = 200)
MF<-mgeneSim(genes=gen_names, ont="MF", organism="arabidopsis", measure="Wang")
BP<-mgeneSim(genes=gen_names, ont="BP", organism="arabidopsis", measure="Wang")
CC<-mgeneSim(genes=gen_names, ont="CC", organism="arabidopsis", measure="Wang")
oldpar <-par()
par(mfrow=c(1,3))
image(MF, axes = FALSE, col = grey(seq(0, 1, length = 256)))
image(BP, axes = FALSE, col = grey(seq(0, 1, length = 256)))
image(CC, axes = FALSE, col = grey(seq(0, 1, length = 256)))
image(MF, axes = FALSE, col = grey(seq(0, 1, length = 256)), xlab="MF")
image(BP, axes = FALSE, col = grey(seq(0, 1, length = 256)), xlab="BP")
image(CC, axes = FALSE, col = grey(seq(0, 1, length = 256)), xlab="CC")
View(BP)
image(CC, col = grey(seq(0, 1, length = 256)), xlab="CC")
image(CC, axes = FALSE, xlab="CC")
gen_names <- head(gen_names,n = 10)
MF<-mgeneSim(genes=gen_names, ont="MF", organism="arabidopsis", measure="Wang")
image(MF, axes = FALSE, col = grey(seq(0, 1, length = 256)), xlab="MF")
View(MF)
image(MF, axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="MF")
gen_names <- read.table("arabidopsis_gene_list.txt", header=F)
gen_names <- gen_names$V1
gen_names <- head(gen_names,n = 200)
MF<-mgeneSim(genes=gen_names, ont="MF", organism="arabidopsis", measure="Wang")
image(MF, axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="MF")
image(MF, axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="MF")
image(BP, axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="BP")
image(CC, axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="CC")
write.table(BP,file="arabidopsis_BP.txt", sep="\t")
nrow(MF)
nrow(MF):1
image((t(MF)[,nrow(MF):1]), axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="MF")
image((t(BP)[,nrow(BP):1]), axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="BP")
image((t(CC)[,nrow(CC):1]), axes = FALSE, col = grey(seq(1, 0, length = 256)), xlab="CC")
read.table("arabidopsis_BP.txt")
BPbig<-read.table("arabidopsis_BP.txt")
BPbig<-read.table("arabidopsis_MF.txt")
View(BPbig)
View(BPbig)
6%%2
&%%3
6%%3
7%%3
9%%2
9%/%2
write.table(BPbig,file="arabidopsis_MF.txt", sep="\t")
mgeneSim
