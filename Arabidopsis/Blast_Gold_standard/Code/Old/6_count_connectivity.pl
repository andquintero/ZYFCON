#!/usr/bin/perl
    use strict;
    use warnings;
	use Data::Dumper;

#use: 5_Subnetwork_extract.pl ../Results/Gen-Gen.nodot.list AT1G01090 3
# 0file: list of gen-gen relationships generated by 2_DataBase_network_no_duplicates.pl
# 1: gene name
# 2: depth

#_____________________#Load Gen-Gen relationships into a hash of hashes____________________

	print "Reading Gen-Gen network\n";
	my ($gengenref) = count_nodes("< $ARGV[0]");
	my %genes_and_count = %$gengenref; #gene network
	#print_hash_of_hashes(\%genes_and_genes);

#_____________________#Read central node and depth_________________________________________
#my @genes 

foreach my $key (sort by_score keys %genes_and_count) {
	print "$key\t$genes_and_count{$key}\n";
}


#print_hash_of_hashes(\%relations);




exit 0;



#############################################################################################
#																							#
#																							#
#																							#
#										SUBROUTINES											#
#																							#
#																							#
#																							#
#############################################################################################


#________________________________________________________________________________________________________


#Counts connectivity:
sub count_nodes {
	my ($FILE) = @_;	
	my $count = 0;
	
	my %unique; #hash with list of genes in network
	
	#open my $BLASTEDGENES, "< $ARGV[0]";
	open DATA, $FILE;
	while ( my $line = <DATA> ) {
		chomp $line;
		my @columns = split (/\t/, $line);
		
		$unique{$columns[0]}++; #change later for ++
		$unique{$columns[1]}++; #change later for ++
		
		
	}
	close DATA;
	return (\%unique);
}

#________________________________________________________________________________________________________

#subrutina que organiza las keys de una hash por su valor
sub by_score { $genes_and_count{$b} <=> $genes_and_count{$a} }
